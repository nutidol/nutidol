{"version":3,"file":"component---src-pages-p-ca-js-8e6a7b0efce711506ac8.js","mappings":"oNAAA,EAAe,IAA0B,qD,UC6IzC,MAvIqBA,IACnBC,EAAAA,cAAA,WACEA,EAAAA,cAACC,EAAAA,EAAM,MACPD,EAAAA,cAAA,OACEE,UAAU,YACVC,MAAO,CACLC,OAAO,SACPC,SAAU,IACVC,cAAc,UAGhBN,EAAAA,cAAA,MAAIE,UAAU,yBAAwB,iBACtCF,EAAAA,cAAA,KAAGE,UAAU,8BAA6B,uBAC1CF,EAAAA,cAAA,KAAGE,UAAU,8BAA6B,0DAG1CF,EAAAA,cAAA,MAAIE,UAAU,QAAO,YACrBF,EAAAA,cAAA,SAAG,03BAeHA,EAAAA,cAAA,SAAG,qrBAaHA,EAAAA,cAAA,kBACEA,EAAAA,cAAA,SAAG,8XAULA,EAAAA,cAAA,MAAIE,UAAU,QAAO,qBACrBF,EAAAA,cAAA,MAAIE,UAAU,aAAY,eAC1BF,EAAAA,cAAA,KAAGE,UAAU,QAAO,wOAMpBF,EAAAA,cAAA,MAAIE,UAAU,aAAY,+BAC1BF,EAAAA,cAAA,KAAGE,UAAU,QAAO,65BAgBpBF,EAAAA,cAAA,MAAIE,UAAU,aAAY,4BAC1BF,EAAAA,cAAA,KAAGE,UAAU,QAAO,8gBAUpBF,EAAAA,cAACO,EAAAA,EAAK,CACJC,IAAKC,EACLP,UAAU,qBACVQ,IAAI,SACJC,OAAK,IAGPX,EAAAA,cAAA,MAAIE,UAAU,QAAO,aACrBF,EAAAA,cAAA,SAAG,+SAKHA,EAAAA,cAAA,WACEA,EAAAA,cAAA,OACEE,UAAU,OACVC,MAAO,CACLS,SAAU,WACVC,WAAY,SACZC,aAAc,SAGhBd,EAAAA,cAAA,UACEQ,IAAI,4CACJO,YAAY,IACZC,gBAAgB,GAChBd,UAAU,OACVe,MAAM,KACNd,MAAO,CACLS,SAAU,WACVM,IAAK,EACLC,KAAM,EACNC,MAAO,OACPC,OAAQ,aAMlBrB,EAAAA,cAACsB,EAAAA,EAAM,M,yGCvIPC,EAAY,CAAC,WAAY,YAAa,QAAS,UAAW,gBAAiB,aAqC3EhB,GA5BQ,WAKH,SAKE,SAKM,SAKJ,SAQY,cAAiB,SAAUiB,EAAMC,GACxD,IAAIC,EAAWF,EAAKE,SAChBxB,EAAYsB,EAAKtB,UACjBS,EAAQa,EAAKb,MACbgB,EAAUH,EAAKG,QACfC,EAAgBJ,EAAKI,cACrBC,EAAYL,EAAKK,UACjBC,GAAQ,OAA8BN,EAAMD,GAEhDG,GAAW,QAAmBA,EAAU,OACxC,IAAIK,EAAU,IAAWpB,GAASe,EAAW,SAAUC,GAAW,UAAWC,GAAiB,iBAAkBC,GAAaH,EAAW,cACxI,OAAoB,gBAAoB,OAAO,OAAS,CAEtDD,IAAKA,GACJK,EAAO,CACR5B,UAAW,IAAWA,EAAW6B,KAErC,KACAxB,EAAMyB,YAAc,QACpBzB,EAAM0B,aAzBa,CACjBtB,OAAO,EACPgB,SAAS,EACTC,eAAe,EACfC,WAAW,GAsBb,K","sources":["webpack://gatsby-starter-default/./src/images/czavcd.png","webpack://gatsby-starter-default/./src/pages/p-ca.js","webpack://gatsby-starter-default/./node_modules/react-bootstrap/esm/Image.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/czavcd-4e6a8f94240d16d4ecf1658eca4f546a.png\";","import * as React from \"react\"\nimport Header from \"../components/Header\"\nimport Footer from \"../components/Footer\"\nimport poster from \"../images/czavcd.png\"\nimport { Image } from \"react-bootstrap\"\n\nconst cookBurnPage = () => (\n  <div>\n    <Header></Header>\n    <div\n      className=\"container\"\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        paddingBottom: `200px`,\n      }}\n    >\n      <h2 className=\"text-center pt-4 pb-2\">CheezyAvocado</h2>\n      <p className=\"text-center text-secondary\">Jan 2020 ~ May 2020</p>\n      <p className=\"text-center text-secondary\">\n        Can we actually have a smart hotel in the near future?\n      </p>\n      <h3 className=\"pb-2\">Overview</h3>\n      <p>\n        To enhance the hotel room service, most hotels work hard on improving\n        the hotel delivery service relying on hotel staff. It is common to see\n        human staff deliver room services when the customers request any orders\n        such as food and hotel amenities to hotel guests. However, this creates\n        the following problem: Request being centralized at the reception,\n        Efficiency, and Human resource allocation. When customers would like to\n        order the extra items from their room, they have to call the front\n        reception and wait for the staff to carry the items to their room. Many\n        people feel uncomfortable because they are guilty and shame to interrupt\n        the staff. Therefore, the customers may give up the order and the hotel\n        might lose the benefits from losing the order. Avocabot would help to\n        deliver any items to the customers whatever and whenever they want\n        without interrupting the front reception.\n      </p>\n      <p>\n        Sometimes the overload problem occurs at the reception. When many\n        customers want to order the food and amenities at the same time. The\n        orders are loaded at the front, the receptor might miss some orders\n        which might cause consequences. With Avocabot, the orders will be\n        recorded in the system. The efficiency of the system will be enhanced to\n        a higher standard. Human resources are the key part of the success of\n        the business. Hotels can totally reallocate human resources, and\n        allocate them to be used more efficiently. When wasting human staff to\n        only do the labour work, some abilities might be wasted even though the\n        hotel can manage to gain more benefits from the missing capabilities.\n      </p>\n\n      <blockquote>\n        <p>\n          Avocabot aims to solve these problems by automating in-door logistics\n          and providing a user interface that the fingertip can resolve for any\n          customer. Customers can only sit in their room and experience an extra\n          delivery system like our robot. The system overview is, therefore, a\n          robot that provides delivery services to customers such as food\n          delivery, laundry, and amenities.\n        </p>\n      </blockquote>\n\n      <h3 className=\"pb-2\">Problem Statement</h3>\n      <h4 className=\"pb-2 px-5\">Human Error</h4>\n      <p className=\"px-5\">\n        Human error is one of the biggest but detailed problems which could\n        happen every day. For instance, the error due to the workload\n        centralizing at hotel reception causes the receptor to miss the hotel\n        customer’s request or order.\n      </p>\n      <h4 className=\"pb-2 px-5\">Delivery Service Efficiency</h4>\n      <p className=\"px-5\">\n        Delivery service efficiency could be enhanced. To make one order, the\n        customer makes a request to the hotel reception, in the simplest way,\n        through a phone call. At this process, they need to wait for the\n        reception to take the call which could take a long time due to\n        centralization of work at the reception and the reception might miss the\n        order as mentioned in 1. When the recipient accepts the call, the\n        customers make a request for services such as ordering the food or\n        asking for toiletries. The reception will take the order and send it to\n        the department that is responsible for it, either through a phone call\n        or hotel systems. After the specific departments have prepared for the\n        service needed, the department either deliver the order themselves or\n        call the reception to send the people to make a delivery. This shows how\n        much time could be wasted through the process even though some processes\n        could be cut out.\n      </p>\n      <h4 className=\"pb-2 px-5\">Customer Dissatisfaction</h4>\n      <p className=\"px-5\">\n        Customer dissatisfaction could occur due to human error by missing the\n        wrong order, the services are very slow due to centralization or the\n        wrong delivery made. Some groups of customers dissatisfaction could lead\n        to bad reviews. The decrease in-room services requests lead to two more\n        problems, a decrease in hotel revenue and the hardship in managing the\n        resources between room services and other processes. Customer\n        dissatisfaction could also occur due to the misbehaviour of the worker\n        which comes from various factors.\n      </p>\n      <Image\n        src={poster}\n        className=\"class-img-top px-5\"\n        alt=\"poster\"\n        fluid\n      />\n\n      <h3 className=\"pb-2\">Objective</h3>\n      <p>\n      Create an automated system that allows hotel guests to order different services, such as room service and laundry, through a web application. The services are delivered to the guest rooms by a robot called “Avocabot”. You can also find the summary and final outcome of the project in the clip below. \n\n      </p>\n     \n      <div>\n        <div\n          className=\"px-5\"\n          style={{\n            position: \"relative\",\n            paddingTop: \"56.25%\",\n            marginBottom: \"50px\",\n          }}\n        >\n          <iframe\n            src=\"https://www.youtube.com/embed/ku1EKh2EWZY\"\n            frameborder=\"0\"\n            allowfullscreen=\"\"\n            className=\"px-5\"\n            title=\"ca\"\n            style={{\n              position: \"absolute\",\n              top: 0,\n              left: 0,\n              width: \"100%\",\n              height: \"100%\",\n            }}\n          ></iframe>\n        </div>\n      </div>\n    </div>\n    <Footer></Footer>\n  </div>\n)\n\nexport default cookBurnPage\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"fluid\", \"rounded\", \"roundedCircle\", \"thumbnail\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useBootstrapPrefix } from './ThemeProvider';\nexport var propTypes = {\n  /**\n   * @default 'img'\n   */\n  bsPrefix: PropTypes.string,\n\n  /**\n   * Sets image as fluid image.\n   */\n  fluid: PropTypes.bool,\n\n  /**\n   * Sets image shape as rounded.\n   */\n  rounded: PropTypes.bool,\n\n  /**\n   * Sets image shape as circle.\n   */\n  roundedCircle: PropTypes.bool,\n\n  /**\n   * Sets image shape as thumbnail.\n   */\n  thumbnail: PropTypes.bool\n};\nvar defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nvar Image = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      rounded = _ref.rounded,\n      roundedCircle = _ref.roundedCircle,\n      thumbnail = _ref.thumbnail,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  var classes = classNames(fluid && bsPrefix + \"-fluid\", rounded && \"rounded\", roundedCircle && \"rounded-circle\", thumbnail && bsPrefix + \"-thumbnail\");\n  return /*#__PURE__*/React.createElement(\"img\", _extends({\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;"],"names":["cookBurnPage","React","Header","className","style","margin","maxWidth","paddingBottom","Image","src","poster","alt","fluid","position","paddingTop","marginBottom","frameborder","allowfullscreen","title","top","left","width","height","Footer","_excluded","_ref","ref","bsPrefix","rounded","roundedCircle","thumbnail","props","classes","displayName","defaultProps"],"sourceRoot":""}